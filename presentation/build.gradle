apply plugin: "com.android.application"
apply from: "../config/android_module_shared_config.gradle"

Properties props = new Properties()
def keystoreProperties = file("keystore.properties")
if (keystoreProperties.exists()) {
    props.load(new FileInputStream(keystoreProperties))
}

android {
    defaultConfig {
        applicationId = "com.iamsteve.android"
        manifestPlaceholders.applicationName = "i am steve"
        project.archivesBaseName = "i-am-steve-${versionName}".toString()
        buildConfigField 'boolean', 'ALLOW_SYSTEM_LOGGING', 'false'
        buildConfigField 'boolean', 'ALLOW_NETWORK_LOGGING', 'false'
    }
    signingConfigs {
        release {
            storeFile file("${props.getProperty("release.key.store", "debug_keystore.jks")}")
            storePassword "${props.getProperty("release.key.store.password", "android")}"
            keyAlias "${props.getProperty("release.key.alias", "androiddebugkey")}"
            keyPassword "${props.getProperty("release.key.alias.password", "android")}"
            v1SigningEnabled = true
            v2SigningEnabled = true
        }
        debug {
            storeFile file("debug_keystore.jks")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        release {
            proguardFile getDefaultProguardFile("proguard-android-optimize.txt")
            proguardFiles fileTree(dir: "../proguard", include: ["*.pro"]).asList().toArray()
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
            buildConfigField 'boolean', 'ALLOW_SYSTEM_LOGGING', 'true'
            buildConfigField 'boolean', 'ALLOW_NETWORK_LOGGING', 'true'
        }
    }

    flavorDimensions "server", "preload"

    productFlavors {
        // Server
        neocities {
            dimension "server"
            buildConfigField "String", "API_URL", "\"https://iamsteve.neocities.org/\""
        }

        // Preload
        withPreload {
            dimension "preload"
        }

        withoutPreload {
            dimension "preload"
        }
    }
}

dependencies {
    implementation project(path: ":domain")
    implementation project(path: ":data")

    // AndroidX
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "androidx.appcompat:appcompat:1.3.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation "com.google.android.material:material:1.4.0"

    // Koin
    implementation "io.insert-koin:koin-core:3.1.2"
    implementation "io.insert-koin:koin-android:3.1.2"

    // RX
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "io.reactivex.rxjava2:rxjava:2.2.20"
    implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"
    implementation "com.jakewharton.rxbinding3:rxbinding:3.0.0"

    // Serialization
    implementation "com.google.code.gson:gson:2.8.6"
}